library(scales)
library(shiny)
require(shinydashboard)
library(rvest)
url <- 'http://www.fire.ca.gov/current_incidents'
webpage <- read_html(url)
fire_data_html <- html_nodes(webpage,'.odd:nth-child(4) .emphasized+ td')
butte_county <- fire_data_html[1]
butte_county <- as.character(butte_county)
butte_fire <- strsplit(butte_county, ">")
list <- (gsub(".*?([0-9]+).", "\\1", butte_county))
list <- (gsub("(*[^0-9])", "", list))
list <- as.character(list)
no_two <- gsub("^2", "", list)
acre_size <- gsub(".[35]$", "", no_two)
acre_size <- as.integer(acre_size)
percent_contained <- gsub("?.*[0]", "", list)
percent_contained <- paste(percent_contained, "%", sep="")
frow1 <- fluidRow(
valueBoxOutput("value1")
,valueBoxOutput("value2")
)
server <- function(input, output) {
#load in the values
percent_contained
acre_size
#creating the valueBoxOutput content
output$value1 <- renderValueBox({
valueBox(
formatC(comma_format()(acre_size), format="d", big.mark=',')
,paste('Size of fire (in acres)')
,icon = icon("fire",lib='glyphicon')
,color = "olive")
})
output$value2 <- renderValueBox({
valueBox(
formatC(percent_contained, format="d", big.mark=',')
,'Percent Contained'
,icon = icon("stats",lib='glyphicon')
,color = "red")
})
}
install.packages("taskscheduleR")
air_quality_url <- 'http://www.baaqmd.gov/about-air-quality/current-air-quality/air-monitoring-data?DataViewFormat=daily&DataView=aqi&StartDate=11/14/2018&ParameterId=316'
air_data_page <- read_html(air_quality_url)
air_data_html <- html_nodes(air_data_page,'.cData')
head(air_data_html)
tail(air_data_html)
air_data_html
air_data_html <- html_nodes(air_data_page,'.cData') %>% html_attr("cData")
air_data_html <- html_nodes(air_data_page,'.cData') %>% html_attr("div")
air_data_html <- html_nodes(air_data_page,'.cData') %>% html_attr("div class='cData'")
air_data_html <- html_nodes(air_data_page,'.cData')
air_data_html <- html_nodes(air_data_page,'.cData') %>% html_text()
air_data_html
air_data_html <- html_nodes(air_data_page,'.cData') %>% html_table()
air_data_html <- html_nodes(air_data_page,'.cData') %>% html_text()
as.integer(air_data_html)
air_data_html <- html_nodes(air_data_page,'.cData') %>% html_text() %>% as.integer()
air_data_html <- html_nodes(air_data_page,'h5, .cData') %>% html_text() %>% as.integer()
air_data_html
air_data_html <- html_nodes(air_data_page,'.cData') %>% html_text() %>% as.integer() %>% na.omit()
air_data_html
air_data_html <- html_nodes(air_data_page,'.cData') %>% html_text() %>% as.integer()
air_data_html
fire_data_html <- html_nodes(webpage,'.odd:nth-child(4) .emphasized+ td') %>% html_text() %>% as.integer()
fire_data_html
fire_data_html <- html_nodes(webpage,'.odd:nth-child(4) .emphasized+ td') %>% html_text()
fire_data_html
butte_county <- fire_data_html[1]
butte_county
butte_county <- as.character(butte_county)
butte_fire <- strsplit(butte_county, "-")
butte_fire#match for only numbers starting with numbers
fire_data_html <- html_nodes(webpage,'.odd:nth-child(4) .emphasized+ td')
butte_county <- fire_data_html[1]
butte_county <- as.character(butte_county)
butte_fire <- strsplit(butte_county, ">")
list <- (gsub(".*?([0-9]+).", "\\1", butte_county))
list <- (gsub("(*[^0-9])", "", list))
list <- as.character(list)
library(taskscheduleR)
taskscheduler_create(taskname = "grablatestdata", rscript = campfire.R,
schedule = "DAILY", starttime = c('11:59','23:59'), startdate=format(Sys.Date()+1, "%m/%d/%y"))
taskscheduler_create(taskname = "grablatestdata", rscript = campfire,
schedule = "DAILY", starttime = c('11:59','23:59'), startdate=format(Sys.Date()+1, "%m/%d/%y"))
cwd
setwd("C:/Users/riley/Desktop/Coding/R/shiny camp fire")
taskscheduler_create(taskname = "grablatestdata", rscript = campfire,
schedule = "DAILY", starttime = c('11:59','23:59'), startdate=format(Sys.Date()+1, "%m/%d/%y"))
taskscheduler_create(taskname = "grablatestdata", rscript = campfire.R,
schedule = "DAILY", starttime = c('11:59','23:59'), startdate=format(Sys.Date()+1, "%m/%d/%y"))
setwd("C:/Users/riley/Desktop/Coding/R/shiny camp fire")
campfire <- system.file("./", "campfire.R", package = "taskscheduleR")
taskscheduler_create(taskname = "grablatestdata", rscript = campfire,
schedule = "DAILY", starttime = c('11:59','23:59'), startdate=format(Sys.Date()+1, "%m/%d/%y"))
